@{
    Layout = "~/Views/Shared/_OrderApp.cshtml";
    ViewData["Title"] = "KOT";
    ViewBag.Active = "Kot";
}
@model Pizzashop.DAL.ViewModels.Kotviewmodel

<link rel="stylesheet" href="~/css/Kot.css" asp-append-version="true"/>
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />

<div class="kot-container">

    <!-- KOT -->
    <div class="row px-0 d-flex justify-content-between mb-2">
        <div class="col-sm-1 d-flex fs-2 fw-bold special-color">KOT</div>
    </div>

    <!-- Item Tab -->
    <div class="row border rounded kot-list-tab bg-white">
       <div class="d-flex nav kot-nav" id="nav-tab" role="tablist" >
            <button class="nav-link tab-btn active d-flex align-items-center" data-tab-id="0">
                <div>All</div>
            </button>   
            
                @foreach (var tab in Model.Categories)
                {
                    <button class="nav-link tab-btn d-flex align-items-center"
                            data-tab-id="@tab.Categoryid">
                        <div class="text-nowrap" >@tab.Name</div>
                    </button>
                }
            
        </div>
    </div>

    <div class="row kot-list-tab bg-white rounded" style="z-index: 1000;">
    <div class="tab-content mt-3">
        <!-- All Content -->
        <div class="tab-pane" id="content-0" style="display: block;">
            <div class="d-flex justify-content-between mb-3 " >
            <h3 style="color: #0066A7;">All </h3>  
            <div class="d-flex gap-2" >
                <a href="@Url.Action("Kot", "Kot", new { status = "In Progress" , categoryId="0" })" id="inProgressBtn"  class="inprogress-ready-btn active  @(ViewContext.RouteData.Values["controller"].ToString() == "Kot" && ViewContext.RouteData.Values["action"].ToString() == "Kot" ? "active" : "")" style=" text-decoration: none;">
            In Progress
        </a>
        <a href="@Url.Action("Kot", "Kot", new { status = "Ready" , categoryId ="0" })" id="readyBtn"  class="inprogress-ready-btn" style="text-decoration: none;">
            Ready
        </a>
         <button class="btn light-btn next-back-btn" onclick="backslide()" >
            <
        </button>
        <button class="btn light-btn next-back-btn" onclick="nextslide()" >
            >
        </button>
            </div>   
            </div>

            <div class="KOT-Card-List-Container">
    <div class="card-wrapper d-flex gap-2" id="cardWrapper">
         @foreach(var card in Model.OrderDetails) 
    {
          @if(card.Items.Count > 0)
            
            @* /*---------------------------------- Kot Cards --------------------------*/ *@
          {
            <div class="d-flex flex-column KOT-Card mb-4 card-details" id="order-card" data-status="@card.OrderStatus" data-orderid="@card.orderId">
         
                <div class="d-flex flex-column Card-Header justify-content-between">
                    <div class="d-flex justify-content-between">
                        <span class="special-color fw-bold">
                        #@card.OrderNo
                        </span>
                        <span class="text-secondary d-flex align-items-center order-time">
                            <i class="bi bi-stopwatch me-1"></i>
                            <span class="time-difference" data-datecounter="@card.OrderDate.ToString("yyyy-MM-ddTHH:mm:ss")">
                                <span class="kotDatecountertext"></span>
                            </span>
                        </span>

                    </div>
                    <div class="d-flex justify-content-start align-items-center fw-bold">
                        <span class="">
                            @card.SectionName
                        </span>
                        <i class="bi bi-dot"></i>
                       @foreach(var table in card.TableNo)
                       {
                        <span>@table.TableName</span>
                       }
                    </div>
                </div>
                
                <div class="d-flex flex-column Card-Content">

                    @for(int i = 0; i < card.Items.Count; i++)
                    {
                        <div class="d-flex flex-column">
                            <div class="d-flex justify-content-between">
                                <div>@card.Items[i].ItemName</div>
                                <dir>
                                    @if(Model.OrderDetails[i].OrderStatus == "In Progress")
                                    {
                                        @card.Items[i].PendigQuantity
                                    }
                                    else if(Model.OrderDetails[i].OrderStatus == "Ready")
                                    {
                                        @card.Items[i].ReadyQuantity
                                    }
                                </dir>
                            </div>
                           
                            <ul>
                                @foreach(var modifier in card.Items[i].Modifiers)
                                {
                                    <li>@modifier.ModifierName</li>
                                }
                            </ul>

                        </div>
                    }
                </div>


     
                <div class="Card-Footer flex-wrap">
                    <span class="special-color fw-bold">Order Instruction :</span>
                </div>
            </div>
            }
    }    

    </div>

            </div>

        </div>

        <!-- Dynamic Content for Each Category -->
        @foreach (var tab in Model.Categories)
        {
            <div class="tab-pane" id="content-@tab.Categoryid" style="display: none;">
                  <div class="d-flex justify-content-between mb-3">
                <h3 style="color: #0066A7;" >@tab.Name</h3>
                
                <div class="d-flex gap-2" >
                <div onclick="navigateToStatus('In Progress', '@tab.Categoryid')" class="inprogress-ready-btn text-nowrap active" style="text-decoration: none;">
                     In Progress
                 </div>
                 <div onclick="navigateToStatus('Ready', '@tab.Categoryid')" class="inprogress-ready-btn" style="text-decoration: none;">
                     Ready
                 </div>
         <button class="btn light-btn next-back-btn" onclick="nextslide()">
            
        </button>
        <button class="btn light-btn next-back-btn" onclick="backslide()">
            >
        </button>
            </div>   
            </div>

            <div class="KOT-Card-List-Container">
             <div class="card-wrapper d-flex gap-2" id="cardWrapper" >

         @foreach(var card in Model.OrderDetails) 
    {
            @* /*---------------------------------- Kot Cards --------------------------*/ *@

             if (card.Items.Any(item => item.CategoryId == tab.Categoryid))
             {
            <div class="d-flex flex-column KOT-Card mb-4" id="order-card-item" data-status="@card.OrderStatus" data-orderid="@card.orderId">

                @* /*--------------- Header ------------*/ *@
                <div class="d-flex flex-column Card-Header justify-content-between"  >
                    <div class="d-flex justify-content-between">
                        <span class="special-color fw-bold">
                        #@card.OrderNo
                        </span>
                        <span class="text-secondary d-flex align-items-center order-time">
                            <i class="bi bi-stopwatch me-1" ></i>
                             <span class="time-difference" data-datecounter="@card.OrderDate.ToString("yyyy-MM-ddTHH:mm:ss")">
                                <span class="kotDatecountertext"></span>
                            </span>
                        </span>

                    </div>
                    <div class="d-flex justify-content-start align-items-center fw-bold">
                        <span class="">
                            @card.SectionName
                        </span>
                        <i class="bi bi-dot"></i>
                       @foreach(var table in card.TableNo)
                       {
                        <span>@table.TableName</span>
                       }
                    </div>
                </div>


                @* /*--------------- Item List ------------*/ *@
                
                <div class="d-flex flex-column Card-Content">

                    @for(int i = 0; i < card.Items.Count; i++)
                    {
                        <div class="d-flex flex-column">
                            <div class="d-flex justify-content-between">
                                <div>@card.Items[i].ItemName</div>
                                <dir>
                                    @if(Model.OrderDetails[i].OrderStatus == "In Progress")
                                    {
                                        @card.Items[i].PendigQuantity
                                    }
                                    else if(Model.OrderDetails[i].OrderStatus == "Ready")
                                    {
                                        @card.Items[i].ReadyQuantity
                                    }
                                </dir>
                            </div>
                           
                            <ul>
                                @foreach(var modifier in card.Items[i].Modifiers)
                                {
                                    <li>@modifier.ModifierName</li>
                                }
                            </ul>

                        </div>
                    }
                </div>


                @* /*--------------- Fooder ------------*/ *@
                <div class="Card-Footer flex-wrap">
                    <span class="special-color fw-bold">Order Instruction :</span>
                </div>
            </div>
            }
    }
        

             </div>
            </div>

            </div>
        }
    </div>
    </div>
    

    <!-- Content Section -->

</div>

@* change Quantity Modal *@
<div id="changeQuanityModalContainer">

</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

@section Scripts {
    
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const tabs = document.querySelectorAll('.tab-btn');
        const contents = document.querySelectorAll('.tab-pane');

        tabs.forEach(tab => {
            tab.addEventListener('click', function() {
                tabs.forEach(t => t.classList.remove('active'));
                this.classList.add('active');

                contents.forEach(content => content.style.display = 'none');
                
                const tabId = this.getAttribute('data-tab-id');
                const activeContent = document.getElementById(`content-${tabId}`);
                if (activeContent) {
                    activeContent.style.display = 'block';
                }
            });
        });
    });
</script>

<script>
    function DateTimerKOT() {
        $(".time-difference").each(function () {
            var orderdatestring = $(this).data("datecounter");

            var orderdate = new Date(orderdatestring).getTime();

            var current = new Date().getTime();

            var diff = current - orderdate;

            var days = Math.floor(diff / (1000 * 60 * 60 * 24));
            var hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((diff % (1000 * 60)) / 1000);

            $(this).find(".kotDatecountertext").text(`${days}d ${hours}h ${minutes}m ${seconds}s`);
        });
    }

    DateTimerKOT();

    setInterval(DateTimerKOT, 1000);
</script>

<script>

let currentSlide = 0;
const cardsToShow = 1; 
const cardWidth = 120; 


function nextslide() {
    const cardWrapper = document.getElementById('cardWrapper');
    const totalCards = cardWrapper.children.length;
    const maxSlide = totalCards - cardsToShow;

    if (currentSlide < maxSlide) {
        currentSlide += cardsToShow;
        const offset = -currentSlide * cardWidth;
        cardWrapper.style.transform = `translateX(${offset}px)`;
    }
}

function backslide() {
    const cardWrapper = document.getElementById('cardWrapper');

    if (currentSlide > 0) {
        currentSlide -= cardsToShow;
        const offset = -currentSlide * cardWidth;
        cardWrapper.style.transform = `translateX(${offset}px)`;
    }
}

</script>    

<script>
   function navigateToStatus(status, categoryId) {
    const url = `/Kot/Kot?status=${status}&categoryId=${categoryId}`;
    window.location.href = url;
}
</script>

<script>
    $(document).on("click","#order-card",function(){
        var orderid = $(this).data("orderid");
        var status = $(this).data("status");

        console.log("OrdersIds:",orderid);

        $.ajax({
            url: '@Url.Action("ChangeQuantityModal", "Kot")',
            type: 'GET',
            data: { id: orderid, status: status },
            dataType: "html",
            success: function (data) {
                console.log("Response:",data);
                $('#changeQuanityModalContainer').html(data);
                $('#changeQuantityModal').modal('show');
            },
            error: function (xhr, status, error) {
                console.error("Error loading modal:", error);
            }
        });
    });

    $(document).on("click","#order-card-item",function(){
        var orderid = $(this).data("orderid");
        var status = $(this).data("status");
        console.log("OrdersIds:",orderid);

        $.ajax({
            url: '@Url.Action("ChangeQuantityModal", "Kot")',
            type: 'GET',
            data: { id: orderid , status: status  },
            dataType: "html",
            success: function (data) {
                console.log("Response:",data);
                $('#changeQuanityModalContainer').html(data);
                $('#changeQuantityModal').modal('show');
            },
            error: function (xhr, status, error) {
                console.error("Error loading modal:", error);
            }
        });
    });
</script>    



}

