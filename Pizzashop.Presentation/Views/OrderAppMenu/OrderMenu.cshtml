@{
    Layout = "~/Views/Shared/_OrderApp.cshtml";
    ViewData["Title"] = "Menu";
    ViewBag.Active = "Kot";
}
@model Pizzashop.DAL.ViewModels.OrderAppMenuviewmodel

<link rel="stylesheet" href="~/css/OrderAppMenu.css" asp-append-version="true" />

<input type="hidden" id="CustomerData" data-customerid="@Model.CustomerId">
<input type="hidden" id="OrderData" data-orderid="@Model.OrderId">

<body style="margin: 0; overflow: hidden;"> 
    <div class="d-flex m-0 pe-3">
        
        <div class="bg-white col-2 p-0" style="position: sticky; top: 0; height: 100vh; overflow-y: auto;">
            <div class="fw-bold ps-3 pb-3 pt-3 fs-5">Category</div>
            <div class="aa">
                <a href="" class="sidebar-tile fs-6 tab-btn" id="favourite-items">
                    <div class="text-nowrap">Favourite Items</div>
                </a>
            </div>
            <div class="aa">
                <a class="sidebar-tile fs-6 tab-btn active-tab" id="AllItems" data-categoryid="0">
                    <div>All</div>
                </a>
            </div>
            <div id="categorydetails"></div>
        </div>

        <div class="@(Model.CustomerId !=0 || Model.OrderId !=0 ? "col-5" : "col-10")  p-3">
            <div class="main-content d-flex justify-content-between mt-3">
                <!-- Search Bar -->
                <div class="d-flex justify-content-end position-relative align-items-center ps-2">
                    <input type="text" class="search form-control search-bar"
                        style="height: 60px; width: 270px !important;" id="MenuItemSearch" placeholder="Search" />
                    <img src="~/images/icons/search.svg" alt=""
                        style="width: 20px; aspect-ratio: 1"
                        class="bg-white position-absolute rounded-2 m-2" />
                </div>

                <!-- Legends -->
                <div class="d-flex gap-3">
                    <div class="d-flex gap-2 align-items-center">
                        <span style="color: var(--table-vegetarian)"><i class="bi bi-circle-fill"></i></span>
                        <span>Vegetarian</span>
                    </div>
                    <div class="d-flex gap-2 align-items-center">
                        <span style="color: var(--table-nonvegetarian)"><i class="bi bi-circle-fill"></i></span>
                        <span>Non-Vegetarian</span>
                    </div>
                    <div class="d-flex gap-2 align-items-center">
                        <span style="color: var(--table-vegan)"><i class="bi bi-circle-fill"></i></span>
                        <span>Vegan</span>
                    </div>
                </div>
            </div>

            <!-- Scrollable Item Section -->
            <div class="mt-3 pb-5" id="ItemsContainer" style=" height:900px; overflow-y:auto; ">
                <!-- Your items here -->
            </div>
        </div>
        
            @if(Model.CustomerId != 0 || Model.OrderId !=0)
            {
            <div id="OrderMenuData">
            </div> 
            }

    </div>
</body>


<div id="ItemModalContent" >

</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

@section Scripts
{
    <script>

        $(document).ready(function () {
            getCategories();
            GetItems(0);
        });


        // Fetch Categories
        function getCategories() {
            $.ajax({
                url: "/OrderAppMenu/GetCategories",
                type: "GET",
                success: function (data) {
                    $("#categorydetails").html(data);
                },
                error: function (xhr, status, error) {
                    console.error("Error fetching categories:", error);
                }
            });
        }
    </script>

    <script>

        //Fetch Category wise Items
        $(document).off("click", ".category-click").on("click", ".category-click", function () {
            var categoryid = $(this).data("categoryid");
            console.log("categoryid:", categoryid);
            document.querySelectorAll(".tab-btn").forEach(tab => {
                tab.classList.remove("active-tab");
            });
            $(this).addClass("active-tab");
            GetItems(categoryid);
        })

        $(document).on("input", "#MenuItemSearch", function () {
            var categoryid = $(".active-tab").data("categoryid");
            GetItems(categoryid);
        });


        $(document).on("click", "#AllItems", function () {
            GetItems(0);
            $(".tab-btn").removeClass("active-tab");
            $(this).addClass("active-tab");
        });

        function GetItems(categoryid) {
            let search = $("#MenuItemSearch").val();

            $.ajax({
                url: "/OrderAppMenu/GetItems",
                type: "GET",
                data: { Categoryid: categoryid, SearchKey: search },
                success: function (data) {
                    $("#ItemsContainer").html(data);
                    $("#MenuItemSearch").val();
                },
                error: function (xhr, status, error) {
                    console.log("Error: " + error);
                }
            });
        } 
    </script>

    <script>
      
            $(document).on("click", "#favourite-items", function () {
                 $(".tab-btn").removeClass("active-tab");
             $(this).addClass("active-tab");
            });

        $(document).on("click", "#favourite-items", function (e) {
            e.preventDefault();
            let search = $("#MenuItemSearch").val();
            favouriteitems(search);
        });

        function favouriteitems(search)
        {
            $.ajax({
            url: "/OrderAppMenu/GetFavouriteItems",
            type: "GET",
            data: { SearchKey: search },
            success: function (data) {
                $("#ItemsContainer").html(data);
            },
            error: function (xhr, status, error) {
                console.log("Error: " + error);
            }
        });
        }
    </script>

  @*Add to Favourites/Remove From Favourites*@
   <script>
    $(document).on("click", ".bi-heart", function () {
        $(this).addClass("bi-heart-fill");
        $(this).removeClass("bi-heart");

        let itemid = $(this).data("itemid");

        $.ajax({
            url: "/OrderAppMenu/UpdateFavourite",
            type: "POST",
            data: { itemid: itemid },
            success: function (data) {
                toastr.success("Item added to favourites");
            },
            error: function (xhr, status, error) {
                console.error("Error:", error);
            }
        });
    });

    $(document).on("click", ".bi-heart-fill", function () {
         $(this).addClass("bi-heart");
        $(this).removeClass("bi-heart-fill");
        let itemid = $(this).data("itemid");

        $.ajax({
            url: "/OrderAppMenu/UpdateFavourite",
            type: "POST",
            data: { itemid: itemid },
            success: function (data) {
                favouriteitems(" ");
                console.log("Success:", data);
                toastr.success("Item removed from favourites");
            },
            error: function (xhr, status, error) {
                console.error("Error:", error);
            }
        });
    });
</script>

<script>
    let min_max_modifiergroup = [];
    let selectedmodifiers = {}; 
    let selected_items = [];
    $(document).off("click", ".item-modifeir-class").on("click", ".item-modifeir-class", function() {
        var itemid = $(this).data("itemid");
        var itemname = $(this).data("itemname");
        var itemprice = $(this).data("itemprice");
        var clickedElement = $(this);

        $.ajax({
            url: "/OrderAppMenu/GetModalData",
            type: "GET",
            data: { ItemId: itemid },
            success: function(data) {
                if (data.success !== false) {
                    $("#ItemModalContent").html(data);
                    $("#ItemModifierGroupModal").modal("show");

                    min_max_modifiergroup = [];  
                    selectedmodifiers = {};  
                    $(".min_max").each(function() {
                        let modifierGroupId = $(this).data("modifiergroupid");
                        let minValue = $(this).data("minvalue");
                        let maxValue = $(this).data("maxvalue");

                        min_max_modifiergroup.push({
                            ModifierGroupId: modifierGroupId,
                            Min: minValue,
                            Max: maxValue
                        });
                    });

                    console.log("min_max_modifiergroup:", min_max_modifiergroup);
                } else {
                    @* toastr.error("No modifier group available for this item");*@

                    if(!selected_items[itemid]){
                        selected_items[itemid] = {
                            itemid: itemid,
                            itemprice: itemprice,
                            totalAmount : itemprice,
                            itemQuantity: 1,
                        };
                    }
                    else{
                        selected_items[itemid].itemQuantity += 1;
                        selected_items[itemid].totalAmount = selected_items[itemid].itemprice * selected_items[itemid].itemQuantity;
                        $(`#item-quantity-${itemid}`).text(selected_items[itemid].itemQuantity);
                        $(`#item-amount-${itemid}`).text(selected_items[itemid].totalAmount);
                        return;
                    }

                    let itemaccordian =
                        `
                          <div class="item-row w-100 py-1 px-2 d-flex align-items-center justify-content-between border mt-2" id="accord-${itemid}">
                    <div class="accordion mt-2 mb-2" id="item-accordian-1">
                <div class="d-flex align-items-center gap-2 drop-class" data-bs-toggle="collapse" data-bs-target="#order-item-${itemid}" aria-expanded="false" aria-controls="order-item-${itemid}">
                <img src="~/images/dropdownimg.webp" alt="" height="23" class="icon-rotate opacity-50">
                <span class="item-name-for-order">${itemname}</span>
                </div>
                <div id="order-item-${itemid}" class="p-0 ms-0 collapse" aria-labelledby="headingPizza" data-bs-parent="#item-accordian-1">
                     
                <ul class="ps-4 mb-0 mt-1 modifier-list-for-order" style="min-width: 90px;" id="modifier-list-for-order-1">      
                    <li>
                        <div class="d-flex justify-content-between gap-2">
                            <span>Onion</span>
                            <span>₹20</span>
                        </div>
                    </li>
                   
                </ul>
                 
                </div>
            </div>
            <div class="item-end-part-for-order">
            <!-- Quantity Box -->
                        <div class="d-flex align-items-center justify-content-between px-2 py-0 gap-1 quantity-box">
                        <i class="bi bi-dash" onclick="MinusQuantity(${itemid})" id="minus-quantity-${itemid}" ></i>
                        <span class="quantity-box-display" id="item-quantity-${itemid}">
                        1
                        </span>
                        <i class="bi bi-plus" onclick="PlusQuantity(${itemid})" id="minus-quantity-${itemid}"></i>
                        </div>
                        <!-- Price Details -->
                        <div class="d-flex flex-column align-items-start gap-1 item-sums">
                        <div class="item-amount" id="item-amount-${itemid}">₹${itemprice}</div>
                        <div class="modifier-amount">₹80.99</div>
                        </div>
                        <!-- Delete Icon -->
                        <div class="d-flex justify-content-center align-items-center delete-item" data-itemid="${itemid}" >
                        <i class="bi bi-trash fs-5"></i>
                        </div>
                </div>
                </div>
                        `;

                      $("#itemdata").append(itemaccordian);

                }
            },
            error: function(xhr, status, error) {
                console.error("Error fetching item modifier group:", error);
            }
        });
    });
</script>

<script>
    function MinusQuantity(itemid) {
    let quantityElement = $(`#item-quantity-${itemid}`);
    let ItemQuantity = parseInt(quantityElement.text());

    if (ItemQuantity === 1) {
       
        return;
    }

    ItemQuantity -= 1;
    selected_items[itemid].itemQuantity = ItemQuantity;

    selected_items[itemid].totalAmount = selected_items[itemid].itemprice * ItemQuantity;

    quantityElement.text(ItemQuantity);
    $(`#item-amount-${itemid}`).text(selected_items[itemid].totalAmount);
}


function PlusQuantity(itemid) {
    let quantityElement = $(`#item-quantity-${itemid}`);
    let ItemQuantity = parseInt(quantityElement.text());

    console.log("ItemQuantity:", ItemQuantity);
    ItemQuantity += 1;
    selected_items[itemid].itemQuantity = ItemQuantity;
    console.log("ItemQuantity:", ItemQuantity);


    selected_items[itemid].totalAmount = selected_items[itemid].itemprice * selected_items[itemid].itemQuantity;

    console.log("ItemQuantity:",  selected_items[itemid].totalAmount);

    quantityElement.text(ItemQuantity);
    $(`#item-amount-${itemid}`).text(`₹${selected_items[itemid].totalAmount}`);
}

        $(document).off("click",".delete-item").on("click",".delete-item",function(){
           var itemid = $(this).data("itemid");
            console.log("itemid:", itemid);
            delete selected_items[itemid];
            $(`#accord-${itemid}`).remove();
        });

</script>    

<script>
    var selectedmodifiers = {};

    $(document).off("click", ".item-modifeir-card").on("click", ".item-modifeir-card", function() {
        var modifierGroupId = $(this).data("modifiergroupid");
        var modifierId = $(this).data("modifierid");

        var current_min_max = min_max_modifiergroup.find(u => u.ModifierGroupId == modifierGroupId);
        console.log("current_min_max:", current_min_max);

        if (!selectedmodifiers[modifierGroupId]) {
            selectedmodifiers[modifierGroupId] = [];
        }
        console.log("selectedmodifiers:", selectedmodifiers);

        let selected_list = selectedmodifiers[modifierGroupId];
        let index = selected_list.indexOf(modifierId);

        console.log("selected_list:", selected_list);
        console.log("index:", index);

        if (index > -1) {
            selected_list.splice(index, 1);
            $(this).removeClass("cardSelected");
            console.log("Modifier removed");
        }
        else{
        if (selected_list.length < current_min_max.Max) {
            selected_list.push(modifierId);
            $(this).addClass("cardSelected");
            console.log("Modifier added");
        } else {
            let name = $(`#modifier-name-${modifierGroupId}`).text();
            toastr.error("You can select a maximum of " + current_min_max.Max + " " + "from" + " " + name);
        }}
    });
</script>

<script>
    $(document).off("click","#ItemModifierGroupModalModalSubmit").on("click","#ItemModifierGroupModalModalSubmit",function(){
        for(let i=0;i<min_max_modifiergroup.length;i++){
            let modifierGroupId = min_max_modifiergroup[i].ModifierGroupId;
              if (!selectedmodifiers[modifierGroupId]) {
                  selectedmodifiers[modifierGroupId] = [];
                 }
            let selected_list = selectedmodifiers[modifierGroupId];
            console.log("selected_list:", selected_list);
            console.log("modifierGroupId",modifierGroupId);
            if(selected_list.length < min_max_modifiergroup[i].Min){
                let name = $(`#modifier-name-${modifierGroupId}`).text();
                toastr.error("You must select a minimum " + min_max_modifiergroup[i].Min+" " + "from" +" "+ name);
                return;
            }
            
        }
          $("#ItemModifierGroupModal").modal("hide");
    });
</script>

@*Get Order Data*@

<script>
    $(document).ready(function () {
        var orderId = $("#OrderData").data("orderid");
        console.log("Order ID:", orderId);

        if (orderId != 0) {
            $.ajax({
                url: "/OrderAppMenu/GetOrderData",
                type: "GET",
                data: { OrderId: orderId },
                success: function (data) {
                    $("#OrderMenuData").html(data);
                },
                error: function (xhr, status, error) {
                    console.error("Error fetching order data:", error);
                }
            });
        }
    });
</script>

}