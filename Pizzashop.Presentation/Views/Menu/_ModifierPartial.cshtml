 @model Pizzashop.DAL.ViewModels.ModifierItemListViewModel

  <p class="ps-3 fs-3">Modifiers</p>

    <div class=" d-flex align-items-center gap-3 pe-3 justify-content-end mt-5">
        <div class=" d-flex justify-content-end position-relative align-items-center ">
          <div class="d-flex justify-content-end position-relative align-items-center">
            <input type="text" class="search form-control" style="height: 50px;" id="ModifierListSearch" 
              placeholder="Search" />
            <img src="~/images/icons/search.svg" alt="" style="width: 20px; aspect-ratio: 1"
              class="bg-white position-absolute rounded-2 m-2" onclick="itemSearch()"/>
          </div>
        </div>

        <div>
          <img data-bs-toggle="modal" data-bs-target="#deleteModifierModalForMass" 
     class="border delete-icon d-flex p-lg-3 p-2" 
     src="~/images/icons/trash (1).svg" alt="Delete Icon" id="delete-icon-massmodifierdelete"/>
        </div>
        <div class="border new-item d-flex p-lg-3 p-2" data-bs-toggle="modal" data-bs-target="#addmodifieritemmodal"
          style="background-color: #0066a7; color: white; text-wrap: nowrap;">
          +New Modifier
        </div>
    </div>

   <div class=" mt-3 me-3 ms-3 mb-4 table-responsive">
            <table class="table">
              <thead>
                <tr>
                  <div>
                    <th scope="col">
                      <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="outerCheckboxes">
                        Name
                      </div>
                  </div>
                  </th>
                  <th scope="col" style="text-align: center;">Unit</th>
                  <th scope="col" style="text-align: center;">Rate</th>
                  <th scope="col" style="text-align: center;">Quantity</th>
                  <th scope="col">Action</th>
                </tr>
              </thead>
              <tbody>
                @foreach (var item in Model.ModifierItemList){
                 <tr>
                  <th scope="row">
                    <div class="form-check gap-5"> 
                      <input class="form-check-input inner-check-deletes" type="checkbox" value="" id="flexCheckChecked" data-degroupid = "@item.ModifierGroupId" data-deid="@item.ModifierItemId">
                      <div class="d-flex align-items-center gap-1">
                        <div class="d-flex align-items-center text-nowrap modifier-name">@item.Name</div>
                      </div>
                    </div>
                  </th>
                 
          
          <td style="text-align: center;">
            @item.Unitname
          </td>
              <td style="text-align: center;">
            @item.Rate
          </td>
          <td style="text-align: center;">
            @item.Quantity
          </td>
          <td>
            <a data-bs-toggle="modal" id="modifierEdit" data-bs-toggle="modal" data-bs-target="#Editmodifieritemmodal" class="edit-item" data-editmodifierid="@item.ModifierItemId" ><img src="~/images/icons/pen.svg" a  lt=""></a>
            <img data-bs-toggle="modal" class="delete-modifier" data-bs-toggle="modal" data-bs-target="#deleteModifierModal" onclick="deleteModifier(this)" data-deletemodifierid ="@item.ModifierItemId" data-deletemodifiergroupid = "@item.ModifierGroupId" src="~/images/icons/trash (1).svg" alt="">
                                                
          </td>
          </tr> 
} 
        </tbody>
        </table>
      </div>

         <div class="d-flex table-footer align-items-center justify-content-end gap-lg-2 gap-md-2 gap-1 me-1 me-md-4 me-lg-4">
                <div class="d-flex align-items-center gap-1 items">
                  <span class="ps-5 font2">Items Per Page</span>
                  <select class="form-select " onchange="changePageSizeForModifiers()" id="selectpagesizeForModifiers" aria-label="Floating label select example"
                    style="width: 65px;">
                    @if(Model.Page.PageSize!=null)
                    {
                    <option value="3" selected="@(Model.Page.PageSize==3 ? true : false)" >3</option>
                    <option value="5" selected="@(Model.Page.PageSize==5 ? true : false)" >5</option>
                    <option value="10" selected="@(Model.Page.PageSize==10 ? true : false)" >10</option>
                    <option value="15" selected="@(Model.Page.PageSize==15 ? true : false)" >15</option>
                    }
                  </select>
                </div>
                <div class="d-flex align-items-center gap-1">
                  <span class="font2"> Showing @((Model.Page.CurrentPage- 1) * Model.Page.PageSize +
                            1)-@Math.Min(Model.Page.CurrentPage * Model.Page.PageSize, Model.Page.TotalRecords) of
                            @Model.Page.TotalRecords</span>
                  <div class="pt-3">
                    <nav aria-label="Page navigation example">
                      <ul class="pagination gap-2">
                        <li class="page-item @(Model.Page.CurrentPage>1 ? " " : "disabled") ">
                          <a class="page-link" aria-label="Previous" onclick="changePageForModifiers(@Model.Page.CurrentPage-1)">
                            <span aria-hidden="true">&laquo;</span>
                          </a>
                        </li>
                        <li>
                          <span class="page-link">@Model.Page.CurrentPage</span>
                        </li>
                        <li class="page-item @(Model.Page.CurrentPage<Model.Page.TotalPages ? " " : "disabled")  ">
                          <a class="page-link"  aria-label="Next" onclick="changePageForModifiers(@Model.Page.CurrentPage+1)">
                            <span aria-hidden="true">&raquo;</span>
                          </a>
                        </li>
                      </ul>
                    </nav>
                  </div>
                </div>
          </div> 

<script>
 
 $(document).on("input","#ModifierListSearch", function () {
      console.log("success");
        currentPage = 1;
        changePageForModifiers(currentPage);
      });

      $(document).on('click', '.delete-modifier', function () {
    var modifierId = $(this).data('deletemodifierid');
    var modifiergroupid = $(this).data('deletemodifiergroupid');
    console.log( "modifierids:", modifierId);
    console.log("modifiergroupids:", modifiergroupid);
    $('#ModifierItemId').val(modifierId);
    $('#ModifierGroupId').val(modifiergroupid);

  });

    var selectedModifierId;

    $(document).ready(function () {
      
        $(document).on("click", ".modifierGroupBtn", function () {
            selectedModifierId = $(this).data("modifier-id");
            console.log("Selected Modifier ID:", selectedModifierId);
            changePageSizeForModifiers();
        });  
    });

    function changePageSizeForModifiers() {
        let pagesize = $('#selectpagesizeForModifiers').val();
        let search = $('#ModifierListSearch').val();

        $.ajax({
            url: '@Url.Action("ItemsByModifier", "Menu")',
            type: "GET",
            data: { id: selectedModifierId, pageNo: 1, pageSize: pagesize, searchKey: search },
            success: function (data) {
                $("#modifieritems").html(data);
                console.log("success");
            },
            error: function () {
                console.log("Error occurs");
            }
        });
    }

      function changePageForModifiers(pagNum)
      {
          let pagesize = $('#selectpagesizeForModifiers').val();
          let search = $('#ModifierListSearch').val();

            $.ajax({
              url: '@Url.Action("ItemsByModifier", "Menu")',
              type: "GET",
              data: { id: selectedModifierId, pageSize: pagesize, pageNo: pagNum, searchKey: search },
              dataType: "html", 
              success: function (data) {
                  $('#modifieritems').html(data);
              },
              error: function () {
                  $('#modifieritems').html("No Data Found");
              }
          });
      }
</script>

<script>
 $(document).ready(function () {
      const outerCheck = document.getElementById("outerCheckboxes");
      const innerChecks = document.querySelectorAll(".inner-check-deletes");

      outerCheck.addEventListener("change", function () {
          innerChecks.forEach(checkbox => {
              checkbox.checked = outerCheck.checked;
          });
      });

      innerChecks.forEach(checkbox => {
          checkbox.addEventListener("change", function () {
              const allChecked = [...innerChecks].every(cb => cb.checked);
              const anyChecked = [...innerChecks].some(cb => cb.checked);

              outerCheck.checked = allChecked;
              outerCheck.indeterminate = !allChecked && anyChecked; 
          });
      });

});
</script>



<script>
    var groupid;

    function getSelectedId() {
        let selectedIds = [];

        $(".inner-check-deletes:checked").each(function () {
            let id = $(this).data("deid");
            groupid = $(this).data("degroupid"); // This sets groupid, but may not work if no checkboxes are checked
            
            if (id === undefined) {
                console.log("id is undefined");
            } else {
                selectedIds.push(id);
            }
        });
        return selectedIds;
    }

    $(document).ready(function() {
        $('#delete-icon-massmodifierdelete').on('click', function() {   
            var listOfModifierId = getSelectedId();
            console.log("list-id:", listOfModifierId);
            $('#ModifierListForDelete').html(listOfModifierId.join(',')); 
        });

        $('#deleteFormMassModifier').on('submit', function(event) {
            event.preventDefault();

            let itemLists = getSelectedId(); 
            console.log("itemid:", itemLists);
            console.log("modifierGroupId:", groupid);

            if (itemLists.length === 0 || groupid === undefined) {
                alert("Please select at least one item and ensure the group ID is set.");
                return; 
            }

            var formData = new FormData();
            itemLists.forEach(function(id) {
                formData.append('modifierList', id);
            });
            formData.append('modifierGroupId', groupid); 

            $.ajax({
                url: '/Menu/DeleteCombineForModifier',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(data) {
                    location.reload();
                    console.log("Response:", data);
                },
                error: function(xhr, status, error) {
                    console.error("Error deleting items:", xhr.responseText);
                    alert("An error occurred while deleting the items.");
                    $('#delete-icon-massmodifierdelete').modal('hide');
                }
            });
        });
    });
</script>


<div class="modal fade" id="deleteModifierModalForMass" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">Delete Confirmation</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body d-flex justify-content-center align-items-center flex-column">
        <img class="" src="images/icons/exclamation-triangle.svg" alt="">
        <h1 class="fs-5">Are You Sure you want to delete the selected modifiers(s)? for Mass</h1>
      </div>
      <div id="ModifierListForDelete">

      </div>
      <form id="deleteFormMassModifier" method="post" class="modal-footer d-flex justify-content-center">
        <button type="submit" class="btn btn-primary">Yes</button>
        <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">No</button>
      </form>
    </div>
  </div>
</div>
