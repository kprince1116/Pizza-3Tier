@using BAL.Models.Interfaces
@using Pizzashop.DAL.ViewModels
@model Pizzashop.DAL.ViewModels.paginationviewmodel
@inject IPermissions PermissionService

@{
    var canAddMenu = await PermissionService.HasPermission("Menu", ActionPermissions.CanAddEdit);
    var canDeleteMenu = await PermissionService.HasPermission("Menu", ActionPermissions.CanDelete);
}

  <div class=" mt-3 me-3 mb-4 table-responsive">
            <table class="table">
              <thead>
                <tr style="opacity: 0.9;">
                  <div>
                    <th scope="col">
                      <div class="form-check">
                        <input type="hidden" id="#CategotyIdForMassDelete" data-categotyid = "@Model.Categoryid" >
                        <input class="form-check-input" type="checkbox"  id="outerCheckForItem">
                        Name
                      </div>
                  </div>
                  </th>
                  <th scope="col" style="text-align: center;">Item Type</th>
                  <th scope="col" style="text-align: center;">Rate</th>
                  <th scope="col" style="text-align: center;">Quantity</th>
                  <th scope="col">Available</th>
                @if(canAddMenu || canDeleteMenu)
                {
                  <th scope="col">Action</th>
                  }
                </tr>
              </thead>
              <tbody>
                @foreach (var item in Model.Items){
                 <tr>
                  <th scope="row">
                    <div class="form-check gap-5"> 
                      <input class="form-check-input inner-check" type="checkbox" value="" id="flexCheckChecked" data-deleteId="@item.Itemid">
                      <div class="d-flex align-items-center gap-1">
                        <img style="height: 25px; width:35px; border-radius: 90%;" src="@(!string.IsNullOrEmpty(item.Image) ? item.Image  : "/images/dining-menu.png")">
                        <div class="d-flex align-items-center text-nowrap item-name fs-5" style="font-size: fs-1;" >@item.Itemname</div>
                      </div>
                    </div>
                  </th>
                 
                  <td style="text-align: center;">
                     @if(@item.Itemtype=="veg"){
                        <img style="height: 35px;"  src="~/images/icons/veg-icon.svg" alt="">
                     }else{
                    <img style="height: 35px;" src="~/images/icons/non-veg-icon.svg" alt="">
                    }
                  </td>
      
          <td style="text-align: center;">
            @item.Rate
          </td>
          <td style="text-align: center;">
            @item.Quantity
          </td>
          <td>
    <div class="ff form-check form-switch" style="text-align: center;">
        <input class="form-check-input item-available-switch"  
               data-itemid="@item.Itemid" 
               type="checkbox" 
               role="switch" 
               id="flexSwitchCheckChecked_@item.Itemid"  
               @(item.IsAvailable ? "checked" : "")>
    </div>
</td>
          @if(canAddMenu || canDeleteMenu)
          {
          <td>
         @if(canAddMenu){
          <a data-bs-toggle="modal" id="itemEdit" data-bs-target="#editItemModal" class="edit-item" data-editid="@item.Itemid" ><img src="~/images/icons/pen.svg" a  lt=""></a>
          }
          @if(canDeleteMenu)
          {
            <img data-bs-toggle="modal" class="delete-item" data-bs-toggle="modal" data-bs-target="#deleteItemModal" onclick="deleteItem(this)" data-itemid ="@item.Itemid" src="~/images/icons/trash (1).svg" alt="">     
            }                              
          </td>
          }
          </tr>
} 
        </tbody>
        </table>
      </div>

        <div class="d-flex table-footer align-items-center justify-content-end gap-lg-2 gap-md-2 gap-1 me-1 me-md-4 me-lg-4">
                <div class="d-flex align-items-center gap-1 items">
                  <span class="ps-5 font2">Items Per Page</span>
                  <select class="form-select" onchange="changePageSizeForItems()" id="selectpagesizeForItems" aria-label="Floating label select example"
                    style="width: 70px;">
                    @if(Model.PageSize!=null)
                    {
                    <option value="3" selected="@(Model.PageSize==3 ? true : false)" >3</option>
                    <option value="5" selected="@(Model.PageSize==5 ? true : false)" >5</option>
                    <option value="10" selected="@(Model.PageSize==10 ? true : false)" >10</option>
                    <option value="15" selected="@(Model.PageSize==15 ? true : false)" >15</option>
                    }
                  </select>
                </div>
                <div class="d-flex align-items-center gap-1">
                  <span class="font2"> Showing @((Model.CurrentPage- 1) * Model.PageSize +
                            1)-@Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalRecords) of
                            @Model.TotalRecords</span>
                  <div class="pt-3">
                    <nav aria-label="Page navigation example">
                      <ul class="pagination gap-2">
                        <li class="page-item @(Model.CurrentPage>1 ? " " : "disabled") ">
                          <a class="page-link" aria-label="Previous" onclick="changePageForItem(@Model.CurrentPage-1)">
                            <span aria-hidden="true">&laquo;</span>
                          </a>
                        </li>
                        <li>
                          <span class="page-link">@Model.CurrentPage</span>
                        </li>
                        <li class="page-item @(Model.CurrentPage<Model.TotalPages ? " " : "disabled")  ">
                          <a class="page-link"  aria-label="Next" onclick="changePageForItem(@Model.CurrentPage+1)">
                            <span aria-hidden="true">&raquo;</span>
                          </a>
                        </li>
                      </ul>
                    </nav>
                  </div>
                </div>
              </div>


              @* <div onclick="getSelectedIds()">
                clickhere
              </div> *@


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

@section scripts
{
<script>
 @* $(document).ready(function() {
    const outerCheck = document.getElementById("outerCheckForItem");
    const innerChecks = document.querySelectorAll(".inner-check");

    if (!outerCheck) {
        console.error("Outer checkbox not found.");
        return;
    }

    outerCheck.addEventListener("change", function() {
        innerChecks.forEach(checkbox => {
            checkbox.checked = outerCheck.checked; 
            console.log(`Checkbox ${checkbox.id} checked: ${checkbox.checked}`);
        });
    });

    innerChecks.forEach(checkbox => {
        checkbox.addEventListener("change", function() {
            const allChecked = [...innerChecks].every(cb => cb.checked); 
            const anyChecked = [...innerChecks].some(cb => cb.checked); /

            outerCheck.checked = allChecked; 
            outerCheck.indeterminate = !allChecked && anyChecked; 
            console.log(`Outer checkbox state: ${outerCheck.checked}, Indeterminate: ${outerCheck.indeterminate}`);
        });
    }); 
}); *@
</script>


}

@* @section scripts
{
<script>

  $(document).ready(function () {

    $(document).on("click", ".categorygroupbtn", function () {
       var selectedcataegoryId = $(this).data("category-id");
        console.log("Selected Modifier ID:", selectedcataegoryId);
         changePageSizeForItems();
    });
});


function changePageSizeForItems() {
      let pagesize = $('#selectpagesizeForItems').val();
      let search = $('#itemsearch').val();

      $.ajax({
          url: '@Url.Action("ItemsByCategory", "Menu")',
          type: "GET",
          data: { id: selectedcataegoryId, pageSize: pagesize, pageNo: 1, searchKey: search },
          dataType: "html", 
          success: function (data) {
         
              $('#items-container-table').html(data);
          },
          error: function () {
              $('#items-container-table').html("No Data Found");
          }
      });
  } 

  function changePageForItem(pageNum)
  {
      let pagesize = $('#selectpagesizeForItems').val();
      let search = $('#itemsearch').val();

        $.ajax({
          url: '@Url.Action("ItemsByCategory", "Menu")',
          type: "GET",
          data: { id: selectedcataegoryId, pageSize: pagesize, pageNo: pageNum, searchKey: search },
          dataType: "html",  
          success: function (data) {

              $('#items-container-table').html(data);
          },
          error: function () {
              $('#items-container-table').html("No Data Found");
          }
      });
  }
    </script>
    }


 *@
